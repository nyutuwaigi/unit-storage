{"version":3,"sources":["webpack:///src/app/pages/owner/location-select/location-select.page.html","webpack:///src/app/pages/owner/location-select/location-select-routing.module.ts","webpack:///src/app/pages/owner/location-select/location-select.module.ts","webpack:///src/app/pages/owner/location-select/location-select.page.scss","webpack:///src/app/pages/owner/location-select/location-select.page.ts"],"names":["routes","path","component","LocationSelectPageRoutingModule","imports","forChild","exports","LocationSelectPageModule","declarations","LocationSelectPage","geolocation","zone","router","nativeGeocoder","route","queryParams","subscribe","params","fromPage","from","GoogleAutocomplete","google","maps","places","AutocompleteService","autocomplete","input","autocompleteItems","setTimeout","setFocus","searchbar","console","log","getCurrentLocation","getCurrentPosition","then","resp","lat","coords","latitude","longitude","getAddressFromCoords","navigate","navigateToAddress","locationLatLong","latlong","push","navigationExtras","location","JSON","stringify","item","getPlacePredictions","predictions","status","run","forEach","prediction","getLatLOng","description","address","inFo","undefined","options","useLocale","maxResults","reverseGeocode","result","responseAddress","Object","entries","key","value","length","reverse","slice","error","addressString","Promise","resolve","reject","forwardGeocode","selector","template"],"mappings":"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","file":"pages-owner-location-select-location-select-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border ion-padding\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\" class=\\\"cancel\\\" (click)=\\\"close()\\\">\\r\\n      <span>\\r\\n        <ion-icon name=\\\"chevron-back-outline\\\" color=\\\"unit-btn\\\"></ion-icon>\\r\\n      </span>\\r\\n    </ion-buttons>\\r\\n    <ion-searchbar \\r\\n    search-icon = true\\r\\n    #searchbar \\r\\n    [(ngModel)]=\\\"autocomplete.input\\\" \\r\\n    placeholder=\\\"Find your Location\\\"\\r\\n    (ionInput)=\\\"searchLocation()\\\"\\r\\n    (ionClear)=\\\"clearAutocomplete()\\\"\\r\\n    color=\\\"white\\\"\\r\\n    >\\r\\n  </ion-searchbar>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-list (click)=\\\"useCurrentLoaction()\\\" lines=\\\"none\\\">\\r\\n    <ion-item>\\r\\n      <ion-label>\\r\\n        <p class=\\\"main_text\\\">Current Location</p>\\r\\n      </ion-label>\\r\\n      <img style=\\\"margin-inline: 0px 10px;\\\" src=\\\"../../../../assets/imgs/material-location-on.png\\\" slot=\\\"start\\\" />\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\" lines=\\\"none\\\">\\r\\n    <ion-item *ngFor=\\\"let item of autocompleteItems\\\" tappable (click)=\\\"selectSearchResult(item)\\\">\\r\\n      <ion-label>\\r\\n        <p class=\\\"main_text\\\"> {{ item.structured_formatting.main_text }} </p>\\r\\n        <p class=\\\"secondary_text\\\"> {{ item.structured_formatting.secondary_text }} </p>\\r\\n      </ion-label>\\r\\n      <img style=\\\"margin-inline: 0px 10px;\\\" src=\\\"../../../../assets/imgs/material-location-on.png\\\" slot=\\\"start\\\" />\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LocationSelectPage } from './location-select.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LocationSelectPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LocationSelectPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LocationSelectPageRoutingModule } from './location-select-routing.module';\r\n\r\nimport { LocationSelectPage } from './location-select.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LocationSelectPageRoutingModule\r\n  ],\r\n  declarations: [LocationSelectPage]\r\n})\r\nexport class LocationSelectPageModule {}\r\n","export default \".cancel {\\n  margin-right: 5px;\\n  font-size: x-large;\\n}\\n\\nion-icon {\\n  color: lightslategray;\\n}\\n\\nion-list ion-item {\\n  border-bottom: 1px solid #e9e9e9;\\n  margin-left: 20px;\\n  margin-right: 20px;\\n  margin-bottom: 10px;\\n  padding-bottom: 10px;\\n}\\n\\nion-list .main_text {\\n  color: #212529;\\n  font-size: 16px;\\n  font-weight: 500;\\n}\\n\\nion-list .secondary_text {\\n  color: #212529;\\n  font-size: 14px;\\n  font-weight: 300;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvb3duZXIvbG9jYXRpb24tc2VsZWN0L2xvY2F0aW9uLXNlbGVjdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3RCOztBQUNBO0VBQ0UscUJBQ0Y7QUFDQTs7QUFDQTtFQUVJLGdDQUFnQztFQUNoQyxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixvQkFBb0I7QUFDeEI7O0FBUEE7RUFTSSxjQUFjO0VBQ1osZUFBZTtFQUNmLGdCQUFnQjtBQUV0Qjs7QUFiQTtFQWNJLGNBQWM7RUFDWixlQUFlO0VBQ2YsZ0JBQWdCO0FBR3RCIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvb3duZXIvbG9jYXRpb24tc2VsZWN0L2xvY2F0aW9uLXNlbGVjdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FuY2Vse1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XHJcbiAgfVxyXG5pb24taWNvbntcclxuICBjb2xvcjogbGlnaHRzbGF0ZWdyYXlcclxufVxyXG5cclxuaW9uLWxpc3R7XHJcbiAgaW9uLWl0ZW17XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U5ZTllOTtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuICAubWFpbl90ZXh0e1xyXG4gICAgY29sb3I6ICMyMTI1Mjk7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICB9XHJcbiAgLnNlY29uZGFyeV90ZXh0e1xyXG4gICAgY29sb3I6ICMyMTI1Mjk7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\";","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\r\nimport { NativeGeocoder, NativeGeocoderOptions, NativeGeocoderResult } from '@ionic-native/native-geocoder/ngx';\r\nimport { IonSearchbar } from '@ionic/angular';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\n\r\ndeclare var google;\r\n\r\n@Component({\r\n  selector: 'app-location-select',\r\n  templateUrl: './location-select.page.html',\r\n  styleUrls: ['./location-select.page.scss'],\r\n})\r\nexport class LocationSelectPage implements OnInit {\r\n\r\n  autocomplete: { input: string; };\r\n  autocompleteItems: any[];\r\n  GoogleAutocomplete: any;\r\n  lat: any;\r\n  long: any;\r\n  address: string;\r\n  fromPage: string;\r\n  @ViewChild('searchbar', { static: false }) searchbar: IonSearchbar;\r\n \r\n  \r\n  constructor(\r\n    private geolocation: Geolocation,\r\n    public zone: NgZone,\r\n    private router: Router,\r\n    private nativeGeocoder: NativeGeocoder,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.fromPage = params.from;\r\n    });\r\n    this.GoogleAutocomplete = new google.maps.places.AutocompleteService();\r\n    this.autocomplete = { input: '' };\r\n    this.autocompleteItems = [];\r\n\r\n  }\r\n     \r\n  ionViewWillEnter() {\r\n    setTimeout(() =>\r\n      this.setFocus()\r\n      , 300);\r\n  }\r\n  setFocus(): void {\r\n    this.searchbar.setFocus();\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('@@@');\r\n    this.getCurrentLocation();\r\n  }\r\n\r\n  getCurrentLocation() {\r\n\r\n    this.geolocation.getCurrentPosition().then((resp) => {\r\n      console.log('@@',resp);\r\n      this.lat = resp.coords.latitude;\r\n      this.long = resp.coords.longitude;\r\n      this.getAddressFromCoords(resp.coords.latitude, resp.coords.longitude);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  close() {\r\n    if (this.fromPage == 'address') {\r\n      this.router.navigate(['/add-address']);\r\n    } else {\r\n      this.router.navigate(['tabs/tab1']);\r\n    }\r\n  }\r\n\r\n  useCurrentLoaction() {\r\n    if (this.fromPage == 'address') {\r\n      this.navigateToAddress();\r\n    } else {\r\n      let locationLatLong = [];\r\n      let latlong = {\r\n        latitude: this.lat,\r\n        longitude : this.long\r\n      }\r\n       locationLatLong.push(latlong);\r\n      let navigationExtras: NavigationExtras = {\r\n        queryParams: {\r\n          location: JSON.stringify(locationLatLong)\r\n        }\r\n      };\r\n      this.router.navigate(['/category'], navigationExtras);\r\n    }\r\n  }\r\n\r\n  selectSearchResult(item) {\r\n    console.log(item);\r\n    if (this.fromPage == 'address') {\r\n      this.navigateToAddress(item);\r\n    } else {\r\n      let navigationExtras: NavigationExtras = {\r\n        queryParams: {\r\n          location: JSON.stringify(item)\r\n        }\r\n      };\r\n      this.router.navigate(['/category'], navigationExtras);\r\n    }\r\n  }\r\n\r\n  searchLocation() {\r\n    if (this.autocomplete.input == '') {\r\n      this.autocompleteItems = [];\r\n      return;\r\n    }\r\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input },\r\n      (predictions, status) => {\r\n        this.autocompleteItems = [];\r\n        this.zone.run(() => {\r\n          predictions.forEach((prediction) => {\r\n            this.autocompleteItems.push(prediction);\r\n            console.log('@@', this.autocompleteItems);\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  clearAutocomplete() {\r\n    this.autocompleteItems = []\r\n    this.autocomplete.input = '';\r\n  }\r\n\r\n  navigateToAddress(item?) {\r\n    let locationLatLong = [];\r\n     \r\n      let latlong = {\r\n        latitude: this.lat,\r\n        longitude : this.long\r\n      }\r\n       locationLatLong.push(latlong);\r\n    if (item) {\r\n      console.log(this.getLatLOng(item.description));\r\n     this.getLatLOng(item.description).then(location =>{\r\n  \r\n          let navigationExtras: NavigationExtras = {\r\n            queryParams: {\r\n              location: JSON.stringify(location),\r\n              address: item.description\r\n            }\r\n          };\r\n          this.router.navigate(['/add-address'], navigationExtras);\r\n      });\r\n    } else {\r\n      console.log('In 149');\r\n      let inFo = this.getAddressFromCoords(this.lat, this.long);\r\n      console.log(inFo);\r\n      if(this.address){\r\n        let navigationExtras: NavigationExtras = {\r\n          queryParams: {\r\n            location: JSON.stringify(locationLatLong),\r\n            address: this.address \r\n          }\r\n        };\r\n        this.router.navigate(['/add-address'], navigationExtras);\r\n      }\r\n    }\r\n  }\r\n\r\n  getAddressFromCoords(latitude: number, longitude: number) {\r\n    \r\n    console.log(\"getAddressFromCoords \" + latitude + \" \" + longitude);\r\n    if(latitude == undefined){\r\n      return;\r\n    }\r\n    let options: NativeGeocoderOptions = {\r\n      useLocale: true,\r\n      maxResults: 5\r\n    };\r\n    this.nativeGeocoder.reverseGeocode(latitude, longitude, options)\r\n      .then((result: NativeGeocoderResult[]) => {\r\n        this.address = \"\";\r\n        let responseAddress = [];\r\n        for (let [key, value] of Object.entries(result[0])) {\r\n          if (value.length > 0)\r\n            responseAddress.push(value);\r\n        }\r\n        responseAddress.reverse();\r\n        for (let value of responseAddress) {\r\n          this.address += value + \", \";\r\n        }\r\n        this.address = this.address.slice(0, -2);\r\n      })\r\n      .catch((error: any) => {\r\n        this.address = \"Address Not Available!\";\r\n      });\r\n\r\n  }\r\n\r\n  getLatLOng(addressString: any) : Promise<any> {\r\n    console.log(addressString);\r\n    let options: NativeGeocoderOptions = {\r\n      useLocale: true,\r\n      maxResults: 5,\r\n    };\r\n    console.log(options);\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n       this.nativeGeocoder.forwardGeocode(addressString)\r\n       .then((result: NativeGeocoderResult[]) => \r\n       {\r\n          console.log(result);\r\n          resolve(result);\r\n       })\r\n       .catch((error: any) => \r\n       {\r\n          reject(error);\r\n       });\r\n    });\r\n  }\r\n}\r\n"]}