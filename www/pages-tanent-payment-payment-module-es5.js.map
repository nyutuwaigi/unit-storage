{"version":3,"sources":["webpack:///src/app/pages/tanent/payment/payment.page.html","webpack:///src/app/pages/tanent/payment/payment-routing.module.ts","webpack:///src/app/pages/tanent/payment/payment.module.ts","webpack:///src/app/pages/tanent/payment/payment.page.scss","webpack:///src/app/pages/tanent/payment/payment.page.ts"],"names":["routes","path","component","PaymentPageRoutingModule","imports","forChild","exports","PaymentPageModule","declarations","PaymentPage","formBuilder","api","loader","_toast","alertController","storage","cards","url","showAddCard","paymentForm","group","cardNumber","compose","required","cardExpiration","cardCvv","getUserData","get","then","session","org","token","orgId","getPaymentProfile","e","charCode","which","keyCode","date","d","Date","format","present","params","postRequest","getCustomerProfile","subscribe","result","dismiss","success","console","log","data","Customer_profile","message","response","profile","paymentProfiles","length","error","card","create","header","buttons","text","role","cssClass","handler","blah","deleteCard","alert","deleteCustomerProfile","filter","x","customerPaymentProfileId","selector","template"],"mappings":"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","file":"pages-tanent-payment-payment-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Cards</ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"unit-btn\\\" text=\\\"\\\" icon=\\\"chevron-back-outline\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\" (click)=\\\"newCard()\\\">\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"paymentForm\\\" #f=\\\"ngForm\\\">\\r\\n    <ion-list>\\r\\n      <ion-list-header>\\r\\n        Enter Card Details\\r\\n      </ion-list-header>\\r\\n      <ion-card>\\r\\n      <ion-item>\\r\\n          <ion-label position=\\\"stacked\\\">Card Number </ion-label>\\r\\n          <ion-input type=\\\"text\\\" formControlName=\\\"cardNumber\\\" maxlength=\\\"16\\\" (keypress)=\\\"onKey($event)\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\">Date</ion-label>\\r\\n            <ion-datetime displayFormat=\\\"MM/YYYY\\\" pickerFormat=\\\"MM/YYYY\\\" formControlName=\\\"cardExpiration\\\" max=\\\"2050\\\">\\r\\n            </ion-datetime>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\">CVV</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"cardCvv\\\" maxlength=\\\"3\\\" (keypress)=\\\"onKey($event)\\\"></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      </ion-card>\\r\\n    </ion-list>\\r\\n    <div class=\\\"ion-padding\\\">\\r\\n      <ion-button  expand=\\\"block\\\"  color=\\\"unit-btn\\\" [disabled]=\\\"paymentForm.invalid\\\"\\r\\n        (click)=\\\"confirmPayment(f.value)\\\"> Add Card</ion-button>\\r\\n    </div>\\r\\n  </form>\\r\\n  <div *ngIf=\\\"cards.length != 0\\\">\\r\\n    <ion-list *ngFor=\\\"let card of cards;let i=index\\\">\\r\\n      <ion-item  detail=false>\\r\\n        <ion-label>\\r\\n          Card Number\\r\\n          <ion-input style=\\\"font-size: smaller\\\" disabled = \\\"true\\\">{{ card.payment.creditCard.cardNumber}}</ion-input>\\r\\n        </ion-label>\\r\\n        <ion-icon slot=\\\"end\\\"  color=\\\"danger\\\" name=\\\"trash-outline\\\" (click)=\\\"delete(card,i)\\\"></ion-icon>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </div>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PaymentPage } from './payment.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaymentPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaymentPageRoutingModule } from './payment-routing.module';\r\n\r\nimport { PaymentPage } from './payment.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    PaymentPageRoutingModule\r\n  ],\r\n  declarations: [PaymentPage]\r\n})\r\nexport class PaymentPageModule {}\r\n","export default \"ion-list ion-list-header {\\n  font-size: 16px;\\n  color: \\\"quaternary\\\";\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGFuZW50L3BheW1lbnQvcGF5bWVudC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSxlQUFlO0VBQ2YsbUJBQW1CO0FBQTNCIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGFuZW50L3BheW1lbnQvcGF5bWVudC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tbGlzdHtcclxuICAgIGlvbi1saXN0LWhlYWRlcntcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgY29sb3I6IFwicXVhdGVybmFyeVwiO1xyXG4gICAgfVxyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertController } from '@ionic/angular';\r\nimport * as moment from 'moment';\r\nimport { ApiService } from 'src/app/services/api-service.service';\r\nimport { LoaderService } from 'src/app/services/loader.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { config, UNITURL } from '../../config/config';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.page.html',\r\n  styleUrls: ['./payment.page.scss'],\r\n})\r\nexport class PaymentPage implements OnInit {\r\n\r\n  public cards: any = [];\r\n  public paymentForm: FormGroup;\r\n  url: any = config.url;\r\n  showAddCard: Boolean = false;\r\n  token: any;\r\n  orgId: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private loader: LoaderService,\r\n    private _toast : ToastService,\r\n    public alertController: AlertController,\r\n    private storage : Storage\r\n    ) {\r\n    this.paymentForm = this.formBuilder.group({\r\n      cardNumber: ['', Validators.compose([Validators.required])],\r\n      cardExpiration: ['', Validators.compose([Validators.required])],\r\n      cardCvv: ['', Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUserData();\r\n  }\r\n\r\n\r\n  getUserData() {\r\n    this.storage.get(\"session\").then((session) => {\r\n      if (session) {\r\n        this.storage.get(\"org\").then((org) =>{\r\n          if(org){\r\n            this.token = session;\r\n            this.orgId = org;\r\n            this.getPaymentProfile();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n  \r\n  }\r\n\r\n  onKey(e) {\r\n    const charCode = e.which ? e.which : e.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  changeformat(date) {\r\n    const d = new Date(date);\r\n    return moment(d).format('MMYY');\r\n  }\r\n\r\n  getPaymentProfile() {\r\n    this.loader.present();\r\n    if (this.token) {\r\n        const params = {\r\n          token: this.token,\r\n          orgId : this.orgId\r\n        }\r\n        this.api.postRequest(this.url + UNITURL.getCustomerProfile,\r\n          params).subscribe(\r\n            async (result) => {\r\n              this.loader.dismiss();\r\n              if (result.success) {\r\n                console.log(result);\r\n                this.cards = result.data.Customer_profile.message.response.profile.paymentProfiles;\r\n\r\n                if (this.cards.length == 0){\r\n                  this.showAddCard = true;\r\n                }else{\r\n                  this.showAddCard = false;\r\n                }\r\n                console.log(this.cards);\r\n              } else {\r\n                console.log(result.message);\r\n              }\r\n            }\r\n          ), (error) => {\r\n            this.loader.dismiss();\r\n            console.log('error', error)\r\n          }\r\n    }\r\n\r\n  }\r\n  async delete(card){\r\n    console.log('@@', card);\r\n    const alert = await this.alertController.create({\r\n      header: 'Delete',\r\n      message: 'Are you sure that you want to delete this card?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: (blah) => { }\r\n        }, {\r\n          text: 'Ok',\r\n          handler: () => {\r\n            this.deleteCard(card);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n  deleteCard(card) {\r\n    this.loader.present();\r\n    if (this.token) {\r\n        const params = {\r\n          token: this.token,\r\n          orgId : this.orgId\r\n        }\r\n        this.api.postRequest(this.url + UNITURL.deleteCustomerProfile,\r\n          params).subscribe(\r\n            async (result) => {\r\n              this.loader.dismiss();\r\n              if (result.success) {\r\n                this.cards = this.cards.filter(x => x.customerPaymentProfileId != x.customerPaymentProfileId);\r\n              }\r\n            }), (error) => {\r\n            this.loader.dismiss();\r\n            console.log('error', error)\r\n          }\r\n    }\r\n  }\r\n}\r\n"]}